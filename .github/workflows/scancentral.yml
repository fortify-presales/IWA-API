
# Create GitHub Action Repository Variables for your version of the application:
#   FORTIFY_BASE_URL should be the Fortify Base URL (e.g. https://ssc.uat.fortifyhosted.net)
#   FORTIFY_PARENT_APPVER_NAME is the Fortify SSC Application Version Name corresponding to the parent branch of any newly created branch, this is typically "main" or "dev"
# Create GitHub Action Secrets for your version of the application:
#   FORTIFY_SSC_TOKEN should be an SSC Authorization token (CIToken) obtained from your Fortify tenant.
#   FORTIFY_SCSAST_CLIENT_AUTH_TOKEN should be the ScanCentral SAST Client Authentication token for your Fortify tenant.

name: DevSecOps with Fortify ScanCentral

on:
  # Triggers the workflow on push or pull request events but only for the main or dev branches
  push:
    paths-ignore:
      - '.github/**/**'
      - 'bin/**'
      - 'data/**'
      - 'etc/**'
      - 'README.md'
      - 'LICENSE'
    branches:
      - '**'        # matches every branch
  pull_request:
    branches: [ main, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      runFortifySASTScan:
        description: 'Carry out SAST scan using Fortify'
        required: false
        default: 'false'
      runSonatypeScan:
        description: 'Carry out SCA scan using Sonatype Nexus IQ'
        required: false
        default: 'false'
      runFortifyDASTScan:
        description: 'Carry out DAST scan using Fortify'
        required: false
        default: 'false'

# Global environment variables
env:
  DEFAULT_APP_NAME: "IWA-API"
  GRADLE_VERSION: "7.3"

jobs:

  Build-And-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Setup JDK 11 on host
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
      # Install appropriate version of Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}
      # Build / Test with Gradle
      - name: Build with Gradle
        run: ./gradlew clean build

  Sonatype-SCA:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || (github.event.inputs.runSonatypeScan == 'true') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Setup JDK 11 on host
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

    # TODO: Sonatype Nexus IQ scan

  Quality-Gate:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [ Build-And-Test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Setup JDK 11 on host
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

    # TBD

  Fortify-SAST-Scan:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || (github.event.inputs.runFortifySASTScan == 'true') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Setup JDK 11 on host
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Fortify App and Release Name
        id: fortify-app-and-rel-name
        uses: ./.github/actions/fortify-app-and-release-name
        with:
          default_fortify_app_name: ${{ env.DEFAULT_APP_NAME }}
          default_fortify_release_name: ${{ github.ref_name }}
          app_name_postfix: ${{ vars.FORTIFY_APP_NAME_POSTFIX }}
      # Comment out below when working    
      - name: Print App and Release Name
        shell: bash
        run: |
          echo "SSC App Name: ${SSC_APP_NAME}"
          echo "SSC App Version Name: ${SSC_APPVER_NAME}"
        env:
          SSC_APP_NAME: ${{ steps.fortify-app-and-rel-name.outputs.app_name }}
          SSC_APPVER_NAME: ${{ steps.fortify-app-and-rel-name.outputs.release_name }}
      - name: Run ScanCentral SAST Scan
        uses: fortify/github-action@v1
        with:
          sast-scan: true
        env:
          SSC_URL: ${{ vars.SSC_URL }}
          SSC_TOKEN: ${{ secrets.SSC_TOKEN }}
          SC_SAST_TOKEN: ${{ secrets.CLIENT_AUTH_TOKEN }}
          # EXTRA_SC_SAST_LOGIN_OPTS: --socket-timeout=60s
          SSC_APPVERSION: ${{ format('{0}:{1}', steps.fortify-app-and-rel-name.outputs.app_name, steps.fortify-app-and-rel-name.outputs.release_name) }}
          # EXTRA_PACKAGE_OPTS: -bf custom-pom.xml
          SC_SAST_SENSOR_VERSION: 23.2
          DO_WAIT: true
          #DO_EXPORT: true
          # TOOL_DEFINITIONS: https://ftfy.mycompany.com/tool-definitions/v1/tool-definitions.yaml.zip

  Fortify-DAST-Scan:
    runs-on: ubuntu-latest
    if: ${{ (github.event.inputs.runFortifyDASTScan == 'true') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Setup JDK 11 on host
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Fortify App and Release Name
        id: fortify-app-and-rel-name
        uses: ./.github/actions/fortify-app-and-release-name
        with:
          default_fortify_app_name: ${{ env.DEFAULT_APP_NAME }}
          default_fortify_release_name: ${{ github.ref_name }}
          app_name_postfix: ${{ vars.FORTIFY_APP_NAME_POSTFIX }}

      # TBD

  Security-Gate:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [ Fortify-SAST-Scan,Fortify-DAST-Scan ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Setup JDK 11 on host
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Fortify App and Release Name
        id: fortify-app-and-rel-name
        uses: ./.github/actions/fortify-app-and-release-name
        with:
          default_fortify_app_name: ${{ env.DEFAULT_APP_NAME }}
          default_fortify_release_name: ${{ github.ref_name }}
          app_name_postfix: ${{ vars.FORTIFY_APP_NAME_POSTFIX }}

      # TBD

  Release-Gate:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [ Quality-Gate, Security-Gate ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # TBD
